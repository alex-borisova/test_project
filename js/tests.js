// 1) Какое будет выведено значение: 
//let x = 5;
//alert( x++ ); //5

// 2) Чему равно такое выражение:

// [  + false - null + true;
// console.log([ ] + false); // false
// console.log(typeof([ ] + false)); //string

// console.log([ ] + false - null + true); // NaN

// 3) Что выведет этот код: 
// let y = 1; 
// let x = y = 2; 
//alert(x); // это последовательное присваивание, получим 2

// 4) Чему равна сумма 

// console.log([ ] + 1 + 2); // 12, тип string

// 5) Что выведет этот код: 
//alert( "1"[0] ); // 1 - так как обращаемся к строке по индексу

//	6) Чему равно 

// console.log(2 && 1 && null && 0 && undefined); // null, так как, когда оператор И столкнется с false, он его и выведет

// 7) Есть ли разница между выражениями? 

// console.log(!!( 1 && 2 )); // !! - переводит в boolean
// console.log( 1 && 2 );
// console.log(!!( 1 && 2 ) === ( 1 && 2 )); // false - не равны

// 8) Что выведет этот код

// console.log( null || 2 && 3 || 4 ); //3, так как там и там true, то есть запинается на правде

// console.log(2 && 3); //3
// console.log( null || 2 && 3 ); //3, так как ИЛИ запинается на правде

// 9) Правда ли что a == b ?

// let a = [1, 2, 3],
//     b = [1, 2, 3]; 

// console.log(a == b);

// 10) Что выведет этот код: 

// console.log( +"Infinity" );
// console.log(typeof ( +"Infinity" ));

// 10) Верно ли сравнение: 

// console.log("Ёжик" > "яблоко"); // Я - последняя буква, поэтому она больше 

// 11) Чему равно 

//onsole.log(0 || "" || 2 || undefined || true || falsе); //2